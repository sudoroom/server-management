#!/usr/bin/nft -f

#
# {{ ansible_managed_note }}
#

# nftables firewall for wolf
# Replaces firewalld since we're doing fancier things.

# Mask to match IPv6 addresses by /64
define ip6_msk = ffff:ffff:ffff:ffff::

destroy table inet filter
table inet filter {

  # Sets to contain temporarily blocked IPs (in a fail2ban-esque system)
  set troublemakers_ip4 {
    type ipv4_addr
    flags dynamic
    timeout 1h
    size 512
  }
  set troublemakers_ip6 {
    type ipv6_addr
    flags dynamic
    timeout 1h
    size 512
  }

  # Per-service sets to monitor traffic
  set ssh_ip4 {
    type ipv4_addr
    flags dynamic
    timeout 1h
    size 1024
  }
  set ssh_ip6 {
    type ipv6_addr
    flags dynamic
    timeout 1h
    size 1024
  }


  chain input {
    type filter hook input priority filter
    policy drop

    # Drop all traffic from troublemakers, not just the traffic that triggered the block.
    ip  saddr              @troublemakers_ip4 counter drop
    ip6 saddr and $ip6_msk @troublemakers_ip6 counter drop

    ct state invalid                drop   comment "early drop of invalid connections"
    ct state {established, related} accept comment "allow tracked connections"
    iif lo counter                  accept comment "allow from loopback"
    ip protocol icmp                accept comment "allow icmp"
    meta l4proto ipv6-icmp          accept comment "allow icmp v6"

    # Listening servers
    # sshd - administrative ssh access
    # Subject to a very harsh rate limit, mainly to cut down on logspam
    tcp dport    22 \
      update @ssh_ip4 { ip  saddr              limit rate over 6/hour burst 5 packets } \
      update @troublemakers_ip4 { ip  saddr } \
      drop
    tcp dport    22 \
      update @ssh_ip6 { ip6 saddr and $ip6_msk limit rate over 6/hour burst 5 packets } \
      update @troublemakers_ip6 { ip6 saddr } \
      drop
    tcp dport    22             accept

    # Mail server
    tcp dport    25                 accept comment "incoming smtp"

    # Reject remaining packets.
    meta l4proto udp                reject
    meta l4proto tcp                reject with tcp reset
    counter                         reject with icmpx port-unreachable
  }

  chain forward {
    type filter hook forward priority filter
    policy drop

    log group 6 counter comment "Dropped forwards"
  }

  chain output {
    type filter hook output priority filter
    policy accept

    ct state invalid                               drop   comment "early drop of invalid connections"
    ct state {established, related}                accept comment "allow tracked connections"
    oif lo counter                                 accept comment "allow from loopback"
    ip protocol icmp                               accept comment "allow icmp"
    meta l4proto ipv6-icmp counter                 accept comment "allow icmp v6"

    # Expected outgoing trafic
    tcp                        dport    25         accept comment "smtp"
    meta l4proto {tcp, udp} th dport    53 counter accept comment "dns"
    udp                        dport    67         accept comment "dhcp"
    udp                        dport   123         accept comment "ntp"

    log group 5 counter comment "Remainder"
    # TODO: flip to reject once things have settled
  }
}

# vim:set ts=2 sw=2 et:
